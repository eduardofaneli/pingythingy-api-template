version: '3.8'

services:
  pingythingy-api:
    build:
      context: .
      dockerfile: src/PingyThingy.Api/Dockerfile # Path to the Dockerfile for the API
    container_name: pingythingy-api
    ports:
      - "5000:8080" # Map host port 5000 to container port 8080 (Kestrel's HTTP port)
    environment:
      - ASPNETCORE_ENVIRONMENT=Development # Ensures Development settings like Swagger are active
      - ASPNETCORE_URLS=http://+:8080 # Kestrel listens on port 8080 inside the container
      # OpenTelemetry Configuration (sends data to Aspire Dashboard)
      - OTEL_SERVICE_NAME=PingyThingy.Api # Service name identifier for telemetry
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://aspire-dashboard:18889 # OTLP endpoint provided by Aspire Dashboard container
      - OTEL_DOTNET_EXPERIMENTAL_ASPNETCORE_ENABLE_GRPC_INSTRUMENTATION=true # Optional: Enable if using gRPC
      - OTEL_DOTNET_EXPERIMENTAL_HTTPCLIENT_INSTRUMENTATION_RECORD_EXCEPTION=true # Optional: Enhance HttpClient tracing
    depends_on:
      - aspire-dashboard
    networks:
      - pingythingy-network

  aspire-dashboard:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:latest
    container_name: aspire-dashboard
    ports:
      - "18888:18888" # Aspire Dashboard UI port
      - "18889:18889" # Aspire Dashboard OTLP gRPC port (for receiving telemetry)
      # Port 4317 (OTLP HTTP) is also available if needed
    networks:
      - pingythingy-network

networks:
  pingythingy-network:
    driver: bridge

